@using MenuPlanner.Shared.models
@inject PublicClient PublicClient


<div class="@DivClass">
    <div class="hs-searchbox">
        <input class="search @InputClass" name="searchText"
               type="text" placeholder="Search..." autocomplete="off" spellcheck="false"
               autocorrect="off" @oninput="@GetFilteredIngredients" value="@filter" />
    </div>
    @if (FoundIngredients != null)
    {
        <div class="hs-menu-inner">

            @foreach (var ingredient in FoundIngredients)
            {
                <a class="dropdown-item" data-value="@ingredient.Name" @onclick="@(() => SetIngredient(ingredient))">@ingredient.Name</a>
            }
        </div>}

</div>

@code {

    private List<Ingredient> FoundIngredients { get; set; }

    [Parameter]
    public Ingredient Ingredient { get; set; }

    [Parameter]
    public EventCallback<Ingredient> IngredientChanged { get; set; }

    private string filter = "";

    [Parameter]
    public string DivClass { get; set; } = "form-group";

    [Parameter]
    public string InputClass { get; set; } = "form-control";



    private async Task GetFilteredIngredients(ChangeEventArgs e)
    {
        filter = e.Value.ToString();
        if (filter.Length > 2)
        {
            FoundIngredients = ((await PublicClient.Client.GetFromJsonAsync<Ingredient[]>($"api/Search/IngredientBy?filter={filter}")) ?? Array.Empty<Ingredient>()).ToList();
            StateHasChanged();
        }
        else
        {
            FoundIngredients = new List<Ingredient>();
            await Task.CompletedTask;
        }

    }

    private async Task SetIngredient(Ingredient ing)
    {
        Ingredient = ing;
        FoundIngredients = new List<Ingredient>();
        filter = "";
        await IngredientChanged.InvokeAsync(Ingredient);
        StateHasChanged();
    }


}

