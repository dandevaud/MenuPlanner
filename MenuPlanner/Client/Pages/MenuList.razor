@page "/menuList"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MenuPlanner.Shared.models
@inject NavigationManager NavigationManager
@inject HttpClient Http
@attribute [Authorize]


<a href="/CreateMenu" class="btn btn-info">Add Menu</a>
<hr />

<h3>Menus</h3>

@if (menus == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var menu in menus)
            {
            <tr>
                <td>@menu.Name</td>
                <td>@menu.Description</td>
                <td><a href="/EditMenu/@menu.MenuId" class="btn btn-info">Edit</a></td>
                @*<td><a @onclick="(() => DeleteMenu(menu.MenuId))" class="btn btn-danger">Delete</a></td>*@
                <td><a href="/DeleteMenu/@menu.MenuId" class="btn btn-danger">Delete</a></td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private Menu[] menus;

    protected override async Task OnInitializedAsync()
    {
        await GetMenus();
    }

    public async Task GetMenus()
    {
        try
        {
            menus = await Http.GetFromJsonAsync<Menu[]>("api/Menus");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    public async Task DeleteMenu(Guid id)
    {
        //TODO: add confirmation dialog
        bool confirm = true;
        if (confirm)
        {
            var response = await Http.DeleteAsync($"api/Menus/{id}");

            if (response.IsSuccessStatusCode)
            {
                //var responseText = await response.Content.ReadAsStringAsync();
                await GetMenus();
            }
            else
            {
                //NavigationManager.NavigateTo("MenuList");
            }
        }
    }

}

